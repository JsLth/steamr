% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categories.R
\name{get_categories}
\alias{get_categories}
\alias{get_genres}
\alias{get_store_categories}
\title{Categories}
\usage{
get_categories(
  language = "english",
  country_code = "US",
  extra = NULL,
  trailer = NULL
)

get_genres(language = "english", country_code = "US")

get_store_categories(language = "english", elanguage = NULL)
}
\arguments{
\item{language}{ISO 639-1 language code all tokenized strings should be
returned in. Formally, a tokenized string is a string that is prefixed
with a \code{#} in the VDF file. Not all tokenized strings have a translation
for all languages. If no translation is available, defaults to English.}

\item{country_code}{ISO 3166 country code representing the country from
which to view the Steam store.}

\item{extra}{Unknown.}

\item{trailer}{Unknown.}

\item{elanguage}{Numeric code representing the store language. A list
of language codes and their corresponding languages is defined in
\code{\link{ELanguage}}.}
}
\value{
\describe{
 \item{\code{get_categories}}{A named vector where the names are the
 categories and the values are their human-readable descriptions.}

 \item{\code{get_store_categories}}{A dataframe containing the internal
 and display names, category type, categoryID, image URL, and whether
 the categories are shown in the search.}

 \item{\code{get_genres}}{An unnamed vector of genre names.}
}
}
\description{
Retrieve a list of available store categories and genres. Note that
categories and store categories are inherently different, although their
precise definition is unknown. Categories seem to be aimed at marketing
while store categories are used for search filtering purposes.
}
\examples{
\dontrun{
# categories in swedish
get_categories(language = "swedish")

# these are also categories, but very different ones!
get_store_categories()

# get all genres
get_genres()
}
}
\seealso{
\code{\link{get_apps_in_category}}

\code{\link{get_apps_in_genre}}

\code{\link{get_items}}
}
