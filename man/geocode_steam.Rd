% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geocode.R
\name{geocode_steam}
\alias{geocode_steam}
\title{Geocode}
\usage{
geocode_steam(
  country_code,
  state_code = NULL,
  city_id = NULL,
  force_level = NULL,
  cache = TRUE
)
}
\arguments{
\item{country_code}{A vector of Steam users' states of residence. Must be
an ISO 3166 country code.}

\item{state_code}{A vector of Steam users' states of residence. Must be a
code as returned by the Steam API.}

\item{city_id}{A vector of Steam users' cities of residence. Must be a code
as returned by the Steam API.}

\item{force_level}{Geographic level that the output must return. Can be
one of \code{country}, \code{state}, and \code{city}. If an input location
is not available at the specified level, an empty geometry or \code{NA}
is returned. If \code{NULL}, falls back to the next higher level if an input
location is unavailable.}

\item{cache}{The download of Steam location geocodes can take a few seconds.
If \code{TRUE}, caches this data in a temporary file to speed up subsequent
function calls.}
}
\value{
If \code{sf} is installed, an \code{sf} dataframe containing the
point geometries of a user location. Otherwise, a dataframe containing
\code{lng} and \code{lat} columns.
}
\description{
Geocode Steam country codes, state codes, and cityIDs. Can be used to
geocode the output of functions that return \code{loccountrycode},
\code{locstatecode}, or \code{loccityid}. This includes functions such
as \code{get_player_summary}.

Since users are not obliged to specify any level of location, the geocoder
skips \code{NA} values or falls back to the next higher level, e.g. if
\code{city_id} is \code{NA}, then the state coordinates are returned. This
behavior can be suppressed by passing the \code{force_level} argument. This
can be useful, if the coarseness of the data should be consistent.

This function is powered by
\href{https://github.com/quer/steam-friends-countries}{quer's Steam location}
dataset.
}
\examples{
\dontrun{
# get data containing user locations
user <- get_player_summary(c("76561197984981409", "76561197968282875"))
cc <- user$loccountrycode
sc <- user$locstatecode
ci <- user$loccityid

# geocode the user location
geocode_steam(cc, sc, ci)

# force level to state level -- although cityIDs are available
# this can be useful to keep geographic levels consistent
geocode_steam(cc, sc, ci, force_level = "state")

# similarly, if location information is missing but a certain level
# is requested, geocoder returns NA to adhere to the level target
geocode_steam(cc, force_level = "state")
}
}
