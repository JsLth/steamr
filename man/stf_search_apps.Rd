% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{stf_search_apps}
\alias{stf_search_apps}
\alias{stf_suggest}
\alias{stf_search_store}
\title{Storefront search}
\usage{
stf_search_apps(term, links = FALSE)

stf_suggest(
  term,
  country_code = "US",
  language = "english",
  steam_realm = 1L,
  require_type = NULL,
  excluded_content_descriptors = NULL,
  links = FALSE
)

stf_search_store(
  term,
  country_code = "US",
  language = "english",
  links = FALSE
)
}
\arguments{
\item{term}{Search term used to query the Steam store.}

\item{links}{Whether to include links to icon and logo in the output.
Defaults to \code{FALSE} to avoid littering the output.}

\item{country_code}{ISO 3166 country code representing the country from
which to view the Steam store. A list of Steam countries can be retrieved
with \code{\link{get_country_list}}.}

\item{language}{ISO 639-1 language code all tokenized strings should be
returned in. Not all tokenized strings have a translation
for all languages. If no translation is available, defaults to English.}

\item{steam_realm}{Number describing the Steam realm. A value of 1
indicates Steam Global, 2 indicates Steam China, and 0 indicates Unknown.}

\item{require_type}{Which application types should be returned? Can be
one of \code{bundle}, \code{game}, \code{demo}, \code{mod} \code{dlc},
\code{software}, \code{video}, \code{hardware}, \code{series},
and \code{music}.}

\item{excluded_content_descriptors}{A vector of content descriptors to
exclude in the response. Can be one or multiple codes as returned by
\code{\link{content_descriptors}}. Useful to filter explicit contents from
the search results. Defaults to \code{NULL}.}
}
\value{
A dataframe containing at least the appid and application name.
\code{stf_suggest} returns additional information on app type and price.
\code{stf_search_store} returns additional info on metascore, current video
streams, hardware support, and price details. If \code{links = TRUE}, also
includes links to application icon and logo.
}
\description{
Simple Steam store queries that return the best matches to a given search
query. Uses Steam's storefront API.

Steam provides different endpoints that essentially do the same, but
in a slightly different manner.
\itemize{
 \item{\code{stf_search_apps} has less filtering capabilities, provides no
 context and returns a slim output.}
 \item{\code{stf_suggest} provides many filtering capabilities, provides context
 and returns a slightly more detailed output.}
 \item{\code{stf_search_store} has no filtering capabilities, provides context
 and returns a detailed output.}
}
}
\examples{
\donttest{# `stf_search_apps` is suitable for simple queries with low overhead.
stf_search_apps("fortress")

# Multiple terms can be searched in a single call
stf_search_apps(c("team", "fortress"))

# `stf_suggest` is suitable for suggestion systems (e.g. in a search bar)
# as it returns only the first results, allows more sophisticated filtering
# and provides basic metadata.
stf_suggest("fortress")
stf_suggest("team", require_type = "dlc")
stf_suggest("team", language = "german", country_code = "DE")

# `stf_search_store` provides detailed metadata
stf_search_store("fortress")}
}
\seealso{
\code{\link{get_app_list}} and \code{\link{steamspy}} for ways
to retrieve all applications

\code{\link{query}} to query all apps using arbitrary filters.
}
\section{Authentication}{
The functions of this reference page do not need any kind of authentication to be used (Key = API key needed, Login = user login needed).
\tabular{lll}{
    \strong{Function} \tab \strong{Key} \tab \strong{Login}\cr
    \code{stf_search_apps}  \tab no \tab no\cr
    \code{stf_suggest}      \tab no \tab no\cr
    \code{stf_search_store} \tab no \tab no
}




}
