% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reviews.R
\name{get_app_reviews}
\alias{get_app_reviews}
\alias{get_all_app_reviews}
\alias{get_review_histogram}
\title{Get reviews}
\usage{
get_app_reviews(
  appid,
  day_range = NULL,
  start_date = NULL,
  end_date = NULL,
  date_range_type = NULL,
  filter = "all",
  language = "all",
  review_type = "all",
  purchase_type = "steam",
  playtime = c(0, 0),
  filter_offtopic_activity = TRUE,
  num_per_page = 20,
  cursor = NULL
)

get_all_app_reviews(
  appid,
  day_range = NULL,
  start_date = NULL,
  end_date = NULL,
  date_range_type = NULL,
  filter = "recent",
  language = "all",
  review_type = "all",
  purchase_type = "steam",
  playtime = c(0, 0),
  filter_offtopic_activity = TRUE,
  max_tries = 10
)

get_review_histogram(appid, language = "english", review_score_preference = 2)
}
\arguments{
\item{appid}{Application ID referencing a Steam application. There are
generally two ways of retrieving an application ID. The first one is to
inspect the URL of a Steam game. For example the application ID of
Counter-Strike is 10:
\code{https://store.steampowered.com/app/10/CounterStrike/}.

It is also possible to retrieve application IDs programmatically by
exploiting Steam's search API. For details see \code{\link{search_apps}}.}

\item{day_range}{Number of days from now to \code{n} days ago to look for
reviews.}

\item{start_date}{Date-time object describing the earliest time to look for
reviews. Ignored if \code{date_range_type = "all"}.}

\item{end_date}{Date-time object describing the latest time to look for
reviews. Ignored if \code{date_range_type = "all"}.}

\item{date_range_type}{Specifies what to do with reviews within the
date range set by \code{start_date} and \code{end_date}. Options include
\code{include}, \code{exclude}, and \code{all}. If \code{all}, ignores
\code{end_date} and \code{start_date}.}

\item{filter}{Specifies the sort order. Can be one of \code{summary},
\code{recent}, \code{updated}, and \code{all}. \code{summary} returns
a summary of 10 most helpful comments. \code{all} sorts by helpfulness
and applies moving windows in order to always return reviews. \code{recent}
sorts by creation time and \code{updated} sorts by update time. For
\code{get_all_app_reviews}, \code{filter} must be either \code{updated} or
\code{recent}.}

\item{language}{Which review language to include in the output. A full
list of platform supported languages can be found in the
\href{https://partner.steamgames.com/doc/store/localization/languages}{Steamworks documentation}.
Defaults to \code{"all"}, which removes the language filter.}

\item{review_type}{Filters by the type of review. Can be either
\code{positive}, \code{negative}, or \code{all}.}

\item{purchase_type}{Filters by the type of purchase. Can be either
\code{steam}, \code{non_steam_purchase}, or \code{all}.}

\item{playtime}{Length-2 numeric vector specifying the minimum and maximum
playtime in hours that the reviewer should have played the game. If
\code{0}, no required (minimum or maximum) play time is set.}

\item{filter_offtopic_activity}{Whether to filter offtopic activity. This
especially includes so-called "review bombs", i.e. many reviews written
by users in a very short time to artificially alter the review score of a
game. See the Steam
\href{https://steamcommunity.com/games/593110/announcements/detail/1808664240333155775}{blog entry}
for more information.}

\item{num_per_page}{By default, Steam only shows 20 reviews per query.
By setting \code{num_per_page}, this number can go up to a maximum of 100.
For larger queries, consider iterating using \code{get_all_app_reviews}.}

\item{cursor}{For each review page query, \code{get_app_reviews} returns a
cursor ID. This ID can be used to paginate and iterate through many review pages
at once. This argument is probably useless for most use cases and is
extensively used for iteration purposes by \code{get_all_app_reviews}.}

\item{max_tries}{Maximum number of pages until breaking the iteration
and returning the result up to this point.}
}
\value{
A dataframe containing IDs, texts, and metadata of application
reviews on Steam.
}
\description{
Retrieve user reviews for a given Steam application.

\itemize{
 \item{\code{get_app_reviews} retrieves up to 100 reviews.}
 \item{\code{get_all_app_reviews} has the ability to return much more reviews
depending on input parameters.}
}
}
\examples{
\dontrun{
# reviews of counter-strike
get_app_reviews(10)

# get all negative bulgarian reviews
get_app_reviews(10, language = "bulgarian", review_type = "negative")

# get all recent reviews up to page 10
get_all_app_reviews(10, filter = "recent", max_tries = 10)
}
}
